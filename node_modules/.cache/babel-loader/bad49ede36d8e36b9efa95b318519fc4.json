{"ast":null,"code":"var _jsxFileName = \"/home/ghost/Documents/VS code/react/myfirstreactapp/src/components/DishdetailComponent.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderDish(_ref) {\n  let {\n    dish\n  } = _ref;\n  if (dish != null) return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"col-12 col-md-5 m-1\",\n    children: [/*#__PURE__*/_jsxDEV(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: dish.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: dish.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this);\n}\n\n_c = RenderDish;\n\nfunction RenderComments(_ref2) {\n  let {\n    array\n  } = _ref2;\n\n  if (array != null) {\n    const abc = array.comments.map(arr => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: array.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: arr.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"-- \", arr.author, \" , \", new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit'\n            }).format(new Date(Date.parse(arr.date)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, arr.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: abc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_c2 = RenderComments;\n\nconst DishDetail = props => {\n  let dish = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [RenderDish(props.dish), RenderComments(props.dish)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: dish\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n};\n\n_c3 = DishDetail;\nexport default DishDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RenderDish\");\n$RefreshReg$(_c2, \"RenderComments\");\n$RefreshReg$(_c3, \"DishDetail\");","map":{"version":3,"sources":["/home/ghost/Documents/VS code/react/myfirstreactapp/src/components/DishdetailComponent.js"],"names":["React","Card","CardImg","CardText","CardBody","CardTitle","RenderDish","dish","image","name","description","RenderComments","array","abc","comments","map","arr","onClick","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","id","DishDetail","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EACIC,SADJ,QACqB,YADrB;;;AAII,SAASC,UAAT,OAA4B;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AAExB,MAAIA,IAAI,IAAI,IAAZ,EACA,oBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,GAAG,MAAZ;AAAa,MAAA,KAAK,EAAC,MAAnB;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACC,KAApC;AAA2C,MAAA,GAAG,EAAED,IAAI,CAACE;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAA,8BACI,QAAC,SAAD;AAAA,kBAAYF,IAAI,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA,kBAAWF,IAAI,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADA,KAWI,oBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGP;;KAhBQJ,U;;AAkBT,SAASK,cAAT,QAAiC;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;;AAE7B,MAAGA,KAAK,IAAI,IAAZ,EAAiB;AACb,UAAMC,GAAG,GAAGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAoBC,GAAD,iBAC3B;AAAkB,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAAjC;AAAA,6BACA;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,+BACI;AAAA,kCACI;AAAA,sBAAID,GAAG,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,8BAAOF,GAAG,CAACG,MAAX,SAAsB,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,cAAAA,IAAI,EAAE,SAAR;AAAmBC,cAAAA,KAAK,EAAE,OAA1B;AAAmCC,cAAAA,GAAG,EAAE;AAAxC,aAAjC,EAAqFC,MAArF,CAA4F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACY,IAAf,CAAT,CAA5F,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,OAAUZ,GAAG,CAACa,EAAd;AAAA;AAAA;AAAA;AAAA,YADQ,CAAZ;AAUA,wBACQ;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAQC,GAnBL,MAoBI;AACA,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AAEJ;;MA5BQF,c;;AA8BT,MAAOmB,UAAU,GAAIC,KAAD,IAAW;AAC3B,MAAIxB,IAAI,gBACJ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACKD,UAAU,CAACyB,KAAK,CAACxB,IAAP,CADf,EAEKI,cAAc,CAACoB,KAAK,CAACxB,IAAP,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACCA;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC,CAZL;;MAAOuB,U;AAcX,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle } from 'reactstrap';\n\n\n    function RenderDish({dish}) {\n    \n        if (dish != null)\n        return (\n            <Card className=\"col-12 col-md-5 m-1\">\n                <CardImg top width=\"100%\" src={dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        );\n        else\n            return (\n                <div></div>\n            );\n    }\n\n    function RenderComments({array}) {\n      \n        if(array != null){\n            const abc = array.comments.map((arr) => \n                <div key={arr.id} onClick={array.onClick}>\n                <ul className=\"list-unstyled\">\n                    <li>\n                        <p>{arr.comment}</p>\n                        <p>-- {arr.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(arr.date)))}</p>\n                    </li>\n                </ul>\n                </div>\n            )\n            return (\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <h4>Comments</h4>\n                        <div>\n                            {abc}   \n                        </div>\n                    </div>\n                )\n            }\n        else{\n            return(\n                <div></div>\n            )\n        }\n      \n    }\n\n    const  DishDetail = (props) => {\n        let dish=(\n            <div className=\"row\">\n                {RenderDish(props.dish)}\n                {RenderComments(props.dish)}\n            </div>\n        )\n        return(\n            <div className=\"container\">\n            {dish}\n            </div>\n            );\n        }\n\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}